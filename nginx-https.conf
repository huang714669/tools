#p12证书生成nginx需要的证书文件
##openssl pkcs12 -nocerts -nodes -in keystore.p12 -out client.key
##openssl pkcs12 -nokeys -in keystore.p12 -out client.pem
##openssl pkcs12 -nokeys  -clcerts -in keystore.p12 -out javaweb.crt


user  root;
worker_processes  8; 

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024; 
}


http {
    include       /usr/local/nginx/conf/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;
    fastcgi_buffers 8 50m;
    send_timeout 60;

    gzip  on; 
    gzip_proxied any;
    gzip_min_length  1024;
    gzip_buffers    4 8k;
    gzip_comp_level 4;
    gzip_types      text/plain text/css application/x-javascript application/javascript application/xml application/json;
 
    proxy_temp_path  /var/spool/nginx/temp; 
    proxy_cache_path  /var/spool/nginx/cache  keys_zone=CACHE:800m  levels=1:2  inactive=3h max_size=10g;
    

    upstream vhds {
         server 10.202.92.3:8443; 
    }

server {
    listen       8002;
    server_name  10.202.92.3;
    add_header X-Cache-Status $upstream_cache_status;

    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;

    root   /usr/health/dist;  
    index  index.html index.htm;
    proxy_set_header Accept-Encoding 'gzip';   
	
    #将所以访问url为http://api/*的地址代理到http://10.202.91.48:8082
    location ^~ /vhds { 
      proxy_cache CACHE;
      proxy_ssl_certificate         /usr/health/ssl/client.pem;
      proxy_ssl_certificate_key     /usr/health/ssl/client.key;
      proxy_ssl_protocols           TLSv1 TLSv1.1 TLSv1.2;
      proxy_ssl_ciphers             HIGH:!aNULL:!MD5;
      proxy_ssl_trusted_certificate /usr/health/ssl/javaweb.crt;

      proxy_ssl_verify        on;
      proxy_ssl_verify_depth  2;
      proxy_ssl_session_reuse on;
      proxy_cache_valid  2h;
        proxy_cache_key $uri$request_body; 
        proxy_cache_methods GET POST;  
        proxy_ignore_headers Cache-Control;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;

      proxy_pass https://vhds/;  
    }
    location ~ /purge(/.*) {
	allow 127.0.0.1;
	allow 10.202.0.0/16;
	deny all;
#	proxy_cache_purge CACHE $host$1$is_args$args;
    }
    location ~ .*.(gif|jpg|jpeg|png|bmp|swf)$  
    {  
      expires 8d;  
    }  

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}

    #include /etc/nginx/conf.d/*.conf;
}

